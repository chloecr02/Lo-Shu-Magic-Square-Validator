#include <iostream>
#include <iomanip>
#include <string>

using namespace std;

// Global constants
const int ROWS = 3;  // The number of rows in the array
const int COLS = 3;  // The number of columns in the array
const int MIN = 1;  // The value of the smallest number
const int MAX = 9;  // The value of the largest number

// Function prototypes
bool isMagicSquare(int arrayRow1[], int arrayRow2[], int arrayRow3[], int size);
bool checkRange(int arrayRow1[], int arrayRow2[], int arrayRow3[], int size, int min, int max);
bool checkUnique(int arrayRow1[], int arrayRow2[], int arrayRow3[], int size);
bool checkRowSum(int arrayrow1[], int arrayrow2[], int arrayrow3[], int size);
bool checkColSum(int arrayrow1[], int arrayrow2[], int arrayrow3[], int size);
bool checkDiagSum(int arrayrow1[], int arrayrow2[], int arrayrow3[], int size);
void fillArray(int arrayRow1[], int arrayRow2[], int arrayRow3[], int size);
void showArray(int arrayrow1[], int arrayrow2[], int arrayrow3[], int size);

int main()
{
    
    /* Define a Lo Shu Magic Square using 3 parallel arrays corresponding         to each row of the grid */
    int magicArrayRow1[COLS], magicArrayRow2[COLS], magicArrayRow3[COLS];
    // Your code goes here
    fillArray(magicArrayRow1, magicArrayRow2, magicArrayRow3, COLS);
    showArray(magicArrayRow1, magicArrayRow2, magicArrayRow3, COLS);
    
    if (isMagicSquare(magicArrayRow1, magicArrayRow2, magicArrayRow3, COLS)) {
        cout << "\nThis is a Lo Shu Magic Square!\n" << endl;
    } else {
        cout << "\nThis is NOT a Lo Shu Magic Square.\n" << endl;
    }
    
    return 0;
}

// Function definitions go here

// Function definition 1
void fillArray(int arrayRow1[], int arrayRow2[], int arrayRow3[], int COLS) {
    cout << "Enter 3 values for Row 1: ";
    for (int i = 0; i < COLS; i++)
        cin >> arrayRow1[i];
    
    cout << "Enter 3 values for Row 2: ";
    for (int i = 0; i < COLS; i++)
        cin >> arrayRow2[i];
    
    cout << "Enter 3 values for Row 3: ";
    for (int i = 0; i < COLS; i++)
        cin >> arrayRow3[i];
}

// Function definition 2
void showArray(int arrayRow1[], int arrayRow2[], int arrayRow3[], int COLS) {
    for (int i = 0; i < COLS; i++) cout << arrayRow1[i] << " ";
    cout << endl;
    for (int i = 0; i < COLS; i++) cout << arrayRow2[i] << " ";
    cout << endl;
    for (int i = 0; i < COLS; i++) cout << arrayRow3[i] << " ";
    cout << endl;
}

// Function to check if values are within range (1-9)
bool checkRange(int arrayRow1[], int arrayRow2[], int arrayRow3[], int size, int min, int max) {
    for (int i = 0; i < size; i++) {
        if (arrayRow1[i] < min || arrayRow1[i] > max ||
            arrayRow2[i] < min || arrayRow2[i] > max ||
            arrayRow3[i] < min || arrayRow3[i] > max)
        {
            return false;
        }
    }
    return true;
}
